"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1077],{3604:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>_,frontMatter:()=>c,metadata:()=>o,toc:()=>d});var r=n(5893),t=n(1151);const c={sidebar_label:"configuration",title:"configuration"},s=void 0,o={id:"api_reference/configuration",title:"configuration",description:"Config Objects",source:"@site/docs/api_reference/configuration.md",sourceDirName:"api_reference",slug:"/api_reference/configuration",permalink:"/PAModelpy/api_reference/configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/SamiralVdB/PAModelpy/tree/main/docs/docs/api_reference/configuration.md",tags:[],version:"current",frontMatter:{sidebar_label:"configuration",title:"configuration"},sidebar:"tutorialSidebar",previous:{title:"PAModel",permalink:"/PAModelpy/api_reference/PAModel"}},l={},d=[{value:"Config Objects",id:"config-objects",level:2},{value:"P_TOT_DEFAULT",id:"p_tot_default",level:4},{value:"reset",id:"reset",level:4}];function a(e){const i={code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.h2,{id:"config-objects",children:"Config Objects"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-python",children:"class Config()\n"})}),"\n",(0,r.jsx)(i.p,{children:"Object with information about model defaults which are used throughout the package:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["TOTAL_PROTEIN_CONSTRAINT_ID: str,  ",(0,r.jsx)(i.code,{children:"TotalProteinConstraint"})]}),"\n",(0,r.jsx)(i.li,{children:"P_TOT_DEFAULT: float, 0.258 g_p/g_cdw"}),"\n",(0,r.jsxs)(i.li,{children:["CO2_EXHANGE_RXNID: str, ",(0,r.jsx)(i.code,{children:"EX_co2_e"})]}),"\n",(0,r.jsxs)(i.li,{children:["GLUCOSE_EXCHANGE_RXNID: str, ",(0,r.jsx)(i.code,{children:"EX_glc__D_e"})]}),"\n",(0,r.jsxs)(i.li,{children:["BIOMASS_REACTION: str, ",(0,r.jsx)(i.code,{children:"BIOMASS_Ec_iML1515_core_75p37M"})]}),"\n",(0,r.jsxs)(i.li,{children:["OXYGEN_UPTAKE_RXNID: str, ",(0,r.jsx)(i.code,{children:"EX_o2_e"})]}),"\n",(0,r.jsxs)(i.li,{children:["ACETATE_EXCRETION_RXNID: str, ",(0,r.jsx)(i.code,{children:"EX_ac_e"})]}),"\n",(0,r.jsxs)(i.li,{children:["PHYS_RXN_IDS: List of str,  ",(0,r.jsx)(i.code,{children:"[BIOMASS_REACTION, GLUCOSE_EXCHANGE_RXNID, ACETATE_EXCRETION_RXNID, CO2_EXHANGE_RXNID, OXYGEN_UPTAKE_RXNID,                   'PGI', 'G6PDH2r', 'EDA', 'CS', 'ICL', 'PPC', 'ME1', 'ME2']"})]}),"\n"]}),"\n",(0,r.jsx)(i.p,{children:"Defaults are configured for the iML1515 E.coli model"}),"\n",(0,r.jsx)(i.h4,{id:"p_tot_default",children:"P_TOT_DEFAULT"}),"\n",(0,r.jsx)(i.p,{children:"g_protein/g_cdw"}),"\n",(0,r.jsx)(i.h4,{id:"reset",children:"reset"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-python",children:"def reset()\n"})}),"\n",(0,r.jsx)(i.p,{children:"Reset the config object to the standard settings for E.coli iML1515."})]})}function _(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);